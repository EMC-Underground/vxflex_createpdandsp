- name: "Get ScaleIO token for Auth"
  uri:
    url: "https://{{ vxflex_gateway_ip }}:{{ vxflex_gateway_https_port }}\
    /api/login"
    return_content: yes
    user: "{{ vxflex_gateway_username }}"
    password: "{{ vxflex_gateway_pw }}"
    force_basic_auth: yes
    validate_certs: False
    status_code:
      - 200
      - 201
      - 202
  register: auth
  run_once: True
  tags:
    - create_pdandsp

- name: "Check to see if protection Domain exists"
  uri:
    url: "https://{{ vxflex_gateway_ip }}:{{ vxflex_gateway_https_port }}\
    /api/types/ProtectionDomain/instances/action/queryIdByKey"
    method: POST
    user: "{{ vxflex_gateway_username }}"
    password: "{{ auth.json }}"
    body: { "name": "{{ vxflex_protection_domain_name }}"}
    force_basic_auth: yes
    body_format: json
    validate_certs: False
    status_code:
      - 200
      - 201
      - 202
      - 500
  register: protection_domain_id
  run_once: True
  tags:
    - create_pdandsp

- name: "Create Protection Domain if it does not exist"
  uri:
    url: "https://{{ vxflex_gateway_ip }}:{{ vxflex_gateway_https_port }}\
    /api/types/ProtectionDomain/instances"
    method: POST
    user: "{{ vxflex_gateway_username }}"
    password: "{{ auth.json }}"
    body: { "name": "{{ vxflex_protection_domain_name }}"}
    force_basic_auth: yes
    body_format: json
    validate_certs: False
    status_code:
      - 200
      - 201
      - 202
  when: protection_domain_id.status == 500
  run_once: True
  tags:
    - create_pdandsp

- name: "Register pd var"
  uri:
    url: "https://{{ vxflex_gateway_ip }}:{{ vxflex_gateway_https_port }}\
    /api/types/ProtectionDomain/instances/action/queryIdByKey"
    method: POST
    user: "{{ vxflex_gateway_username }}"
    password: "{{ auth.json }}"
    body: { "name": "{{ vxflex_protection_domain_name }}"}
    force_basic_auth: yes
    body_format: json
    validate_certs: False
    status_code:
      - 200
      - 201
      - 202
  register: protection_domain_id
  run_once: True
  tags:
    - create_pdandsp


- name: "Check to see if Storage Pool exists"
  uri:
    url: "https://{{ vxflex_gateway_ip }}:{{ vxflex_gateway_https_port }}\
    /api/types/StoragePool/instances/action/queryIdByKey"
    method: POST
    user: "{{ vxflex_gateway_username }}"
    password: "{{ auth.json }}"
    body: { "protectionDomainId": "{{ protection_domain_id.json }}",
    "name": "{{ vxflex_storage_pool_name }}"}
    force_basic_auth: yes
    body_format: json
    validate_certs: False
    status_code:
      - 200
      - 201
      - 202
      - 500
  register: storage_pool_id
  run_once: True
  tags:
    - create_pdandsp

- debug:
    msg: "{{ vxflex_version is version('3.0', '>') }}"
  run_once: True
  tags:
    - [ never, debug ]
    - create_pdandsp

- name: "Check vxflex version and register results to a variable"
  set_fact:
    version_check: "{{ vxflex_version is version('3.0', '<') }}"
  run_once: True
  tags:
    - create_pdandsp

- debug:
    var: version_check
  run_once: True
  tags:
    - [ never, debug ]
    - create_pdandsp


- name: "Create Storage Pool if it does not exist"
  uri:
    url: "https://{{ vxflex_gateway_ip }}:{{ vxflex_gateway_https_port }}\
    /api/types/StoragePool/instances"
    method: POST
    user: "{{ vxflex_gateway_username }}"
    password: "{{ auth.json }}"
    body: { "protectionDomainId": "{{ protection_domain_id.json }}",
    "name": "{{ vxflex_storage_pool_name }}"}
    force_basic_auth: yes
    body_format: json
    validate_certs: False
    status_code:
      - 200
      - 201
      - 202
  when:
    - storage_pool_id.status == 500
    - version_check == true
  run_once: True
  tags:
    - create_pdandsp

- name: "Create Storage Pool if it does not exist for 3.x Software"
  uri:
    url: "https://{{ vxflex_gateway_ip }}:{{ vxflex_gateway_https_port }}\
    /api/types/StoragePool/instances"
    method: POST
    user: "{{ vxflex_gateway_username }}"
    password: "{{ auth.json }}"
    body: { "protectionDomainId": "{{ protection_domain_id.json }}",
    "name": "{{ vxflex_storage_pool_name }}", "mediaType": "SSD"}
    force_basic_auth: yes
    body_format: json
    validate_certs: False
    status_code:
      - 200
      - 201
      - 202
  when:
    - storage_pool_id.status == 500
    - version_check == false
  run_once: True
  tags:
    - create_pdandsp

- name: "Get system ID"
  uri:
    url: "https://{{ vxflex_gateway_ip }}:{{ vxflex_gateway_https_port }}\
    /api/types/System/instances"
    method: GET
    user: "{{ vxflex_gateway_username }}"
    password: "{{ auth.json }}"
    force_basic_auth: yes
    body_format: json
    validate_certs: False
    status_code:
      - 200
      - 201
      - 202
  register: system_id
  run_once: True
  tags:
    - create_pdandsp

- name: "Print system id"
  debug:
    var: system_id.json[0].id
  run_once: True
  tags:
    - [ never, debug ]
    - create_pdandsp

- name: "Print System Information"
  debug:
    var: system_id
  run_once: True
  tags:
    - [ never, debug ]
    - create_pdandsp

- name: "Rename system"
  uri:
    url: "https://{{ vxflex_gateway_ip }}:{{ vxflex_gateway_https_port }}\
    /api/instances/System::{{system_id.json[0].id}}/action/setSystemName"
    method: POST
    user: "{{ vxflex_gateway_username }}"
    password: "{{ auth.json }}"
    body: { "newName": "{{ vxflex_system_name }}"}
    force_basic_auth: yes
    body_format: json
    validate_certs: false
    status_code:
      - 200
      - 201
      - 202
  register: rename_result
  run_once: True
  when: system_id.json[0].name is not defined
  ignore_errors: yes
  tags:
    - create_pdandsp

- name: "Show Rename results"
  debug:
    var: rename_result
  run_once: True
  tags:
    - [ never, debug ]
    - create_pdandsp

- name: "Get system ID"
  uri:
    url: "https://{{ vxflex_gateway_ip }}:{{ vxflex_gateway_https_port }}\
    /api/types/System/instances"
    method: GET
    user: "{{ vxflex_gateway_username }}"
    password: "{{ auth.json }}"
    force_basic_auth: yes
    body_format: json
    validate_certs: False
    status_code:
      - 200
      - 201
      - 202
  register: system_id
  run_once: True
  tags:
    - create_pdandsp

- name: "Print System Information"
  debug:
    var: system_id
  run_once: True
  tags:
    - [ never, debug ]
    - create_pdandsp

- name: "Set SDC Policy to auto approve"
  uri:
    url: "https://{{ vxflex_gateway_ip }}:{{ vxflex_gateway_https_port }}\
    /api/instances/System::{{system_id.json[0].id}}/action/setRestrictedSdcMode"
    method: POST
    user: "{{ vxflex_gateway_username }}"
    password: "{{ auth.json }}"
    body: { "restrictedSdcMode": "None"}
    force_basic_auth: yes
    body_format: json
    validate_certs: false
    status_code:
      - 200
      - 201
      - 202
  run_once: True
  tags:
    - create_pdandsp
